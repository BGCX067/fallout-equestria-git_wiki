#summary Description of the pathfinding system and changes we may plan for it
#labels Phase-Design,Phase-QA

= Introduction =

The pathfinding uses an AStar algorithm on a grid of cases linked using weighted arcs. It's 8 directional, thus the heuristic uses an euclidian distance. And of course, it always finds the best path in a minimal amount of time.

= Pathfinding Process =
At loadinng time, the Tilemap first creates a Pathfinding context (it allocates every node and connects them with arcs if no wall obstructs the path).
To avoid units to uselessly move diagonally, the top/left/right/bottom arcs have a weight of 1, whereas the diagonal arcs have a weight of 1.1.

When a character needs to find a path between a point and another, it asks the Tilemap class for a Pathfinding context in a given zone (in this case, the whole map).

The Tilemap then process every MapElement (characters, obstacles such as doors, etc) and ask them to withdraw the arcs they're obstructing. The MapElements complies and store information about the arcs they deleted.

Once the path has been found, the character inform the Tilemap that he's done : the Tilemap then do the reverse operation and ask all the MapElement to restore the arcs they deleted.

== Pathwalking ==
Once the path has been found, the character follows the directions from the pathfinding algorithm.
At every loop turn, he asks the Tilemap for a Pathfinding context that goes only 1 case away from him, and checks if the case he's trying to reach is still accessible.
If not, he will use pathfinding again to find a new way to its destination. And stop moving if none are found.

= Improvements =
== Single Processing of MapElement collision per loop turn ==
Right now, the collisions with MapElements are checked everytime a character needs a path.
It would be more optimal to only do it the first time someone asks for a path, and replace the withdrawed arcs at the end of the game loop.

In the current state of things, it would be fairly easy to implement. It has, however, ONE drawback : Doors must block the path for the player. But only locked doors can block the path of a NPC. So the accessible arcs for some characters and some others may differ.

!!! Note for future me
Try implementing the doors directly into the pathfinding system, at the levels of the arcs.
Arcs are presents in Nodes from the NodeList containing the Path. This should resolve everything. Since Arcs are never deleted now, maybe have the doors add callback on them.